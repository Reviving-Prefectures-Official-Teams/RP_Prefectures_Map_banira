
namespace = RP_update_events

#create a daily pulse event（日次パルスイベントを作成）
RP_update_events.1 = {
    type = country_event
    hidden = yes

    trigger = {
        OR = {
            NOT = {
                has_global_variable = RP_date_of_last_daily_pulse
            }
            RP_days_since_last_event_execution >= 1
        }
    }

    immediate = {

        if = {
            limit = {
                NOT = {
                    has_global_variable = RP_num_main_event_executions
                }
            }
            set_global_variable = {
                name = RP_num_main_event_executions
                value = 0
            }
        }
        change_global_variable = {
            name = RP_num_main_event_executions
            add = 1
        }

        set_global_variable = {
            name = RP_date_of_last_daily_pulse
            value = game_date
        }
        random_country = {
            trigger_event = {
                id = RP_update_events.2
                days = 1
            }
            trigger_event = {
                id = RP_update_events.2
                days = 2
            }
        }
        random_country = {
            trigger_event = {
                id = RP_update_events.2
                days = 1
            }
            trigger_event = {
                id = RP_update_events.2
                days = 2
            }
        }
        if = {
            limit = {
                RP_num_main_event_executions_modulo_7 = 0
            }
            every_country = {
                trigger_event = {
                    id = RP_update_events.3
                }
            }
        }
    }
}

#helper event to trigger the main event（メインイベントをトリガーするための補助イベント）
RP_update_events.2 = {
    type = country_event
    hidden = yes

    immediate = {
        trigger_event = {
            id = RP_update_events.1
        }
    }
}

#event fired on daily pulse（日次パルス時に発生するイベント）
RP_update_events.3 = {
    type = country_event
    hidden = yes

    immediate = {
        RP_on_weekly_pulse = yes
    }
}

#event fired on border changes（国境変更時に発生するイベント）
RP_update_events.4 = {
    type = country_event
    hidden = yes

    immediate = {
        every_country = {
            RP_on_border_changes = yes
        }
    }
}

#event fired on construction setup（建設設定時に発生するイベント）
RP_update_events.5 = {
    type = country_event
    hidden = yes

    immediate = {
        every_country = {
            country_construction_setup = yes
        }
    }
}

#On construction started（建設開始時）
RP_update_events.6 = {
    type = country_event
    hidden = yes

    immediate = {
        state = {
            RP_state_on_construction_start = yes
        }
    }
}

#On construction finished（建設終了時）
RP_update_events.7 = {
    type = country_event
    hidden = yes
    immediate = {
        state = {
            RP_state_on_construction_end = yes
        }
    }
}

#for testing
# RP_update_events.8 = {
#     type = country_event
#     hidden = no

#     option = {

#     }
# }